image: docker:latest
services:
  - name: docker:dind
    command: ["--insecure-registry=$REGISTRY_FQDN", "--tls=false"]
    alias: docker

variables:
  TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
  TESTCONTAINERS_RYUK_DISABLED: "true"
  # Instruct Testcontainers to use the daemon of DinD.
  DOCKER_HOST: "tcp://localhost:2375"
  # Instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  # Improve performance with overlayfs.
  DOCKER_DRIVER: overlay2

stages:
  - test
  - build
  - package

test:
  image: openjdk:14
  stage: test
  script:
    - ./gradlew test

build:
  image: openjdk:14
  stage: build
  script:
    - ./gradlew bootJar
  artifacts:
    paths:
      - build/libs/pki-ra-acme-server-1.0-SNAPSHOT.jar
    expire_in: 1 week

package:
  stage: package

  image: docker:20-dind

    # This will run a Docker daemon in a container (Docker-In-Docker), which will
    # be available at thedockerhost:2375. If you make e.g. port 5000 public in Docker
    # (`docker run -p 5000:5000 yourimage`) it will be exposed at thedockerhost:5000.
  services:
    - name: docker:dind
      alias: thedockerhost
      command: ["--insecure-registry=$REGISTRY_FQDN", "--tls=false"]

  variables:
    # Tell docker CLI how to talk to Docker daemon; see
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
    DOCKER_HOST: tcp://thedockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  before_script:
    - echo "$CI_BUILD_TOKEN" | docker login $REGISTRY_FQDN --username gitlab-deploy-token --password-stdin

  script:
    - docker build -t $REGISTRY_FQDN/win-ra/winllc-ra-acme-server:latest .
    - docker push $REGISTRY_FQDN/win-ra/winllc-ra-acme-server:latest